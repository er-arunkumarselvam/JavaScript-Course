JAVASCRIPT NOTES

What is JavaScript?

    - JavaScript is a lightweighted and interpreted (or just-in-time compiled) programming language with first-class functions. It is a scripting Language for web pages.
    - JavaScript features are
            - protype-based
            - multi paradigm
            - single threaded
            - dynamic language
            - supporting oops concept
            - imperative and declarative(eg: functional programming)style.

Histroy of JavaScript?

    - JS was originally developed as "LiveScript" by Netscape in 1990's.
    - JS was created by "Brendan Eich" in 1995 during his time at Netscape Communications.
    - JS is client-side scripting language used for web applications at that time.


    Note:

        "JavaScript is not JAVA". 

What are the applications or builing with using JS is possible?

    - Website Development
    - Web and Mobile applications
    - Desktop Applicaitons 
    - Game Development
    - Server-Side Development
    - Browser Extensions
    - Real Time Applicaitons
    - IoT
    - Machine Learning and AI

Why we should learn JS?

    - Easier to start with learn
    - Great career opportunities
    - Wide range of usage
    - Big community supporting
    - High Demand for Future 

What are the frameworks in JS?

    - React JS
    - Vue JS
    - Angular JS
    - React Native (Build Mobile Application)
    - ElectronJS and much more (Build Desktop Applicaiton)
    
How JS works?

    Old Method:

             run
    JS code ----> browser (Inbuilt JS Engine) ----> output

    for eg: Google Chrome (V8 JS Engine), FireFox Browser (Spidermonkey JS Engine)

    Limitation: For browser works only JS


    New Method: 

    - In 2009, Ryan Dahl (Scientist) introduce "JS Engine Wrapper into C++" it called as "Node".

    Using Node, we can create,

        - Web applications
        - Mobile applications
        - Backend applications

ECMA Script?

    - It is a Just a specification (set of rules).
    - JS to follow ECMA Script


JS Comments:

    // - Single Line Comment
    
    /* ... */ - Multiline Comment

How to run JavaScript in Node JS?

    - Already installed node JS
    - Check node version (using cmd)

        node -v (v18.17.1)

    - node js file name. eg: main.js

JavaScript Variable:

    - variable is a store in values and temporary memory allocation 

    syntax:

            var variableName = value;

        Ex:
            varibale name
                   |
                   |
            var message = "Hello, my name is arun, I'm Learning JavaScript";
             |                                  |
             |                                  |
    variable keyword                          value


            console.log(message);
    
    Variable Keyword:

        - var
        - let
        - const

    Shortcut Tip: console opening (F12) for chrome

    Concatnation Operator:

        "content" + variableName
        "content" + variableName + "conent"

    Without value in variable ---> Undefined

        Ex: let age;

    JavaScript is dynamically typed language. don't need a data type.

    Variable Naming Convention:

        - Don't use reserved JS keywords name. (eg: let break)
        - Should not start with numbers. (eg:5star)
        - No space and hypen (-) (eg:note-pad or full name)
        - It's Case-Sensitive (eg: fullName and FullName both are different.)
        - Use valuable name

    Tip: Variable name using "CamelCase" like fullName, getView and lastName, etc.,

    var vs let:

        var - old way of storing variables
        let - new way of storing variables (After Improvement of ES6+)


    const:

        - const variable don't change the value (don't override the values). But let or var (override the values).
        - const variable can't edit or modify the values.

        Error:

            Uncaught TypeError: Assignment to constant variable.

JavaScript Datatypes:

    - 2 types of Datatypes. there are "Primitive" and "Reference" Types

        Primitive Types                         Reference Types

            - String                                - Object
            - Integer/Number                        - Array
            - Float/Double                          - Function
            - Boolean
            - Undefined
            - null

    Statically Typed:

        - Datatype is defined. (C, C++, Java)

                    variableName
                        |
                        |
                String name = "Arunkumar"
                   |               |
                   |               |
                Datatype         value

    Dynamically Typed:

        - Datatype is not defined. (JavaScript, Python, PHP)

              variableName
                   |
                   |
                 name = "Arunkumar"
                            |
                            |
                          value

    Find the datatype ----> "typeof" keyword

                typeof variableName

        note: "null" is a Object Datatype

JavaScript Object:

    - Object declare using variable keywords and values represented inside the flower braces {}.

    syntax:

        
        variableKeyword variableName = {}

    Ex:

        let person = {}

        - It's an empty object

    Object Values:

        - It's represented as many types.

            1. Key pair value

        syntax:

            key : value

        - key is a unique 
        - value is represent all datatypes.

    Pass Multiple Parameters passing to objects using separated by (,) delimiter.

    Ex: name : "Arunkumar", 
        age : 24,

    Object values reference or get the values from object.

        - 2 Ways

            - Dot Notation (.) (Mostly Used)

            syntax:

                objectName.key

            Ex:

                person.name

                - Object Values are change (Override the values), but "Keys" Doesn't change

            - Bracket Notation 

            syntax:

                objectName['key']

            Ex:

                person['name']

    Object Freedom for creation for sub object.

        syntax:

            variableKeyword variableName = {
                key : value,
                key : {
                    key:value
                }
            }

JavaScript Arrays:

    - Array is a collection of data.
    - Array is an object
    - It represent or denoted by []
    - Arrays are Index based
    - Index starts from 0
    - One of the Important Property of array "array length"
    - array length -1 = Max. Index no

    syntax:

        variableKeyword arrayName = []
    
    Ex:

        let favColor = ['red', 'blue', 'green']

    Access Array values using Index

        arrayName[1] --> blue

    Calculate an array length ----> arrayName.length

    Ex: favColor.length  ----> 3

JavaScript Functions:

    - Function Create using keyword is "function".
    - 2 parts are important. they are function declation and function calling.

    syntax: 
       
        () ---> Placeholder of parameters or Passing through parameters
        
        // function declation
        function functionName(){
            // set of statements
        }

        // function calling
        functionName();

        () ---> Placeholder of arguments or Passing through arguments

JavaScript Operators:

    - Operators means
    - Operators is a important play role an every programming language.

        variable + Operators = Expression (Algorithm)


    Types of Operators:

        - Arithmatic Operators
        - Comparison Operators
        - Assignment Operators
        - Logical Operators
        - Bitwise Operators

    Arithmatic Operator

        - +,-, *, /, % and **
        - Increament (++)
            - preincreament (++value)
            - postincreament (value++)
        - Decreament (--)
            - predecreament (--value)
            - postdecreament (value--)

    Assignment Operator

        - = is assignment operator.
        - To assign the value of variables

    Comparison Operator

        - Comparison operator produces "boolean(true, false)" as a result.
        - Relational Operator -  >, <, <=, >= and ==
        - Equality Operator -  === and ==
        - Not Equality Operator - !== and !=

        === ---> Strict Equality Operator. Compare both (Datatype + Value)
        ==  ---> Lose Equality Operator. Compare (value)

    Ternary Operator

        syntax:

            variableKeyword variableName = condition ? "Condition True Statement" : "Condition False Statement"

            Ex:

            let applyVoterId = age > 18 ? "Eligible" : "Not Eligible"

    Logical Operator

        - 3 Types

            - Logical AND (&&)
                Returns TRUE If both operands are TRUE (both conditions = TRUE)

            - Logical OR (||)
                Returns TRUE If any one operands are TRUE (any ond condition = TRUE)

            - Logical NOT (!)
                Returns TRUE If operand is FALSE (opposite condition FALSE = TRUE)
    
        Logical Operator with Non Boolean Values:

            false || true ---> true (using boolean result)

            Non Boolean Values treated with different mechanism in JS. 2 Mechanisms

                - Falsy (false)

                    Falsy means doesn't exactly false, but some what false.

                        - Undefined
                        - null
                        - 0 --> numbers
                        - false
                        - '' or "" --> strings
                        - NaN

                - Truthy

                    Anything thant is not falsy is Truthy.

            Short Circuiting Concept:

                - First 2 condition only check, otherwise ignore this concept.

                Ex: true || false || true ---> true 

                    Last one true is not consider this condition.










REFERENCE LINKS:

DEVELOPER MOZILLA FOUNDATION : https://developer.mozilla.org/en-US/docs/Web/JavaScript

ECMA SCRIPT : https://www.ecma-international.org/publications-and-standards/standards/ecma-262/